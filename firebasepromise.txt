export async function saveProductsToFirebase(){
    const collectionProducts = collection(firestoreDB, "products")
    for(let item of ItemData){
        const docref = await addDoc(collectionProducts, item)
        console.log(docref.id)
    }

}Funcion para cargar productos en masa de un archivo data
--------------------------------------------------------------------------------------------------------------------------------
 useEffect(() => {
    function getProducto() {
      return new Promise((resolve => {
        setTimeout(() => {
          resolve(ItemData)
        }, 2000);
      }))
    }
    getProducto().then(products => {
      let itemsFilter = ItemData.filter((element) => element.category === idCategory)
      if (idCategory === undefined) {
        setData(products)
        setGreeting("Todas Nuestras Remeras")
      }
      else {
        setData(itemsFilter)
        setGreeting(`${idCategory}`)
      }
    })
  }, [idCategory]) Funcion anterior de filtrado y traer productos 
-------------------------------------------------------------------------------------------------------------------------------------
function getProducts() {
    return new Promise((resolve => {
      const productsCollections = collection(firestoreDB, "products")
      getDocs(productsCollections).then(snapshot => {
        const docsData = snapshot.docs.map(doc => { return { ...doc.data(), id: doc.id } })
        resolve(docsData)
        console.log(docsData)
      })
    }))
  } Traer todos los productos
---------------------------------------------------------------------------------------------------------------------------------------
  function getItemsFromDBbyIdCategory(idCategory) {
    return new Promise((resolve) => {
      const productsCollection = collection(firestoreDB, "products");
      const queryProducts = query(productsCollection, where("category", "==", idCategory))
      getDocs(queryProducts).then(snapshot => {
        const docsData = snapshot.docs.map(doc => {
          return { ...doc.data(), id: doc.id }
        });
        resolve(docsData);
        console.log(docsData)
      });
    });
  }; Traer productos filtrados con query, y where
---------------------------------------------------------------------------------------------------------------------------------------
  useEffect(() => {
    if (idCategory) {
      getItemsFromDBbyIdCategory(idCategory).then((resolve) => {
        setData(resolve)
        setGreeting(idCategory)
        
      });

    } else {
      getProducts().then((resolve) =>{
        setData(resolve)
        setGreeting("Todos Nuestras Remeras")
        
      });
    }
  }, [idCategory]) Para mostrar o la categoria o todos los productos 
  -----------------------------------------------------------------------------------------------------------------------------------------
   function getProducto() {
            return new Promise((resolve => {
                let findItem = ItemData.find((element) => element.id === Number(idUrl))
                setTimeout(() => {
                    resolve(findItem)
                }, 2000);
            }))
        }
        getProducto().then(product => {
            setData(product)
        }) Funcion vieja para mostrar el detalle del producto.
-----------------------------------------------------------------------------------------------------------------------------------------